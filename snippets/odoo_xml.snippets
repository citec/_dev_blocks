global !p
def points2underscores(txt):
	return txt.replace('.', '_')

def underscores2points(txt):
	return txt.replace('_', '.')

def lower_underscore(txt):
	return "".join([c if c.isalnum() else "_" for c in txt.lower()])

def complete(t, opts):
	options = {
		'attrs': ['invisible', 'readonly', 'required'],
		'buttontypes': ['object', 'action', 'worflow'],
		'fieldtypes': ['integer', 'boolean', 'float', 'char', 'text', 'date', 'datetime', 'one2many', 'many2many', 'many2one', 'binary', 'selection', 'related'],
		'weekdays': ['monday', 'tuesday'],
		'operators': ['=', 'like', 'ilike', '<', '>', '<=', '>=', 'in', 'not in'],
		'viewtypes': ['tree', 'form', 'search', 'calendar', 'graph', 'diagram'],
		'track_visibility': ['onchange', 'always'],
		'ondelete': ['cascade', 'restrict', 'set null'],
		'widgets': ['char', 'id', 'email', 'url', 'text', 'html', 'date', 'datetime', 'selection', 'radio', 'many2one', 'many2onebutton', 'many2many', 'many2many_tags', 'many2many_kanban', 'one2many', 'one2many_list', 'reference', 'boolean', 'float', 'integer', 'float_time', 'progressbar', 'image', 'binary', 'many2many_binary', 'statusbar', 'monetary', 'handle', ],
		'positions': ['before', 'after', 'inside', 'replace', 'attributes'],
		'colors': ['todo', 'todo'],  # TODO
		'fonts': ['todo', 'todo'],  # TODO
		'editable': ['top', 'bottom'],
	}
	if isinstance(opts, str) and opts in options:
		opts = options[opts]
	if t:
		opts = [ m[len(t):] for m in opts if m.startswith(t) ]
	if len(opts) == 1:
		return opts[0]
	return '(' + '|'.join(opts) + ')'
endglobal

snippet xml
<?xml version="1.0" encoding="utf-8"?>
<openerp>
	<data>
		
		$0
	</data>
</openerp>
endsnippet

snippet noupdate "noupdate"
noupdate="${1:1}" $0
endsnippet

snippet <!--
<!--
${1:${VISUAL:put something here}}
-->
endsnippet

snippet record
<record id="${1:xmlid_with_underscores}" model="${2:model.with.points}">
	$0
</record>
endsnippet

snippet field
<field name="$1">$2</field>
$0
endsnippet

snippet statusbar "statusbar" b
<field name="${1:state}" widget="statusbar" statusbar_visible="${2:draft,open,done}" ${3:clickable="1"} />
endsnippet

snippet foverride "Field override" b
<field name="${1:original_field}" position="$2`!p snip.rv = complete(t[2], 'positions')`">
	${0:${VISUAL}}
</field>
endsnippet

snippet subtype "Message subtype" b
<record id="mt_${4:`!p snip.rv = points2underscores(t[1])`_`!p snip.rv = lower_underscore(t[2])`}" model="mail.message.subtype">
	<field name="name">${2:Name here}</field>
	<field name="description">${3:Description here}</field>
	<field name="res_model">${1:model.with.points}</field>
	<field name="default" eval="False"/>
	<field name="hidden" eval="False"/>
</record>
$0
endsnippet

snippet xpath "XPath Element" b
<xpath expr="${1://Some[@expression='here']}" position="$2`!p snip.rv = complete(t[2], 'positions')`">
	${0:${VISUAL}}
</xpath>
endsnippet

snippet fv
<field name="$1" $2/>$0
endsnippet

snippet filter "Filter" b
<filter name="${1:some_name}" string="${2:Some String}" domain="[('${3:some_field}', '=', ${4:some_value})]" />$0
endsnippet

snippet filtertoday "Filter Today" b
<filter string="Este Mes" name="due_date" domain="['&amp;', ('due_date', '&lt;', (context_today() + relativedelta(months=1)).strftime('%%Y-%%m-01')), ('due_date', '&gt;=', time.strftime('%%Y-%%m-01'))]" />$0
endsnippet

snippet options "Options"
options="{${1:${2:'no_create': 1, }${3:'no_create_edit': 1, }${4:'no_open': 1, }${5:'limit': ${6:20}, }}}"$0
endsnippet

snippet string
string="${1:Field Name}" $0
endsnippet

snippet readonly
readonly="${1:1}" $0
endsnippet

snippet required
required="${1:1}" $0
endsnippet

snippet invisible
invisible="${1:1}" $0
endsnippet

snippet nolabel
nolabel="${1:1}" $0
endsnippet

snippet context
context="{'${1:field}': ${2:'value'}, $3}" $0
endsnippet

snippet widget
widget="$1`!p snip.rv = complete(t[1], 'widgets')`" $0
endsnippet

snippet attrs
attrs="{'$1`!p snip.rv = complete(t[1], 'attrs')`': ${2:[('${3:some}', '=', ${4:'domain'})]}}" $0
endsnippet

snippet attribute "attribute"
<attribute name="${1:attribute_name}">${2:value}</attribute>$0
endsnippet

snippet fieldref
<field name="$1" ref="$2" />
$0
endsnippet

snippet fieldval
<field name="$1" val="$2" />
$0
endsnippet

snippet inherit
<field name="inherit_id" ref="${1:module_name.}${2:view_xml_id}" />
$0
endsnippet

snippet finherit
<field name="${1:original_field}" position="$2`!p snip.rv = complete(t[2], 'positions')`">
	$0
</field>
endsnippet

snippet view "" b
<record id="view_`!p snip.rv = points2underscores(t[1])`_$2`!p snip.rv = complete(t[2], 'viewtypes')`" model="ir.ui.view">
	<field name="name">${3:$1.$2}</field>
	<field name="model">${1:model.with.points.here}</field>
	<field name="arch" type="xml">
		<$2 string="${4:Title here}" version="${5:8.0}">
			$0
		</$2>
	</field>
</record>
endsnippet

snippet viewinherit "" b
<record id="view_`!p snip.rv = points2underscores(t[1])`_$2`!p snip.rv = complete(t[2], 'viewtypes')`" model="ir.ui.view">
	<field name="name">${3:$1.$2}</field>
	<field name="model">${1:model.with.points.here}</field>
	<field name="inherit_id" ref="${4:module_name.}${5:view_xml_id}" />
	<field name="arch" type="xml">
		$0
	</field>
</record>
endsnippet

snippet groupby "Group by in search view" b
<group expand="0" string="${1:Group By...}">
	<filter string="${2:STRING}" domain="[]" context="{'group_by': '${3:field_name}'}" />$0
</group>
endsnippet

snippet separator "Separator" b
<separator ${1:string="${2:Some string}" }/>$0
endsnippet

snippet button "Button" b
<button name="${1:python_function_or_workflow_trigger_or_%(action_xml_id)d_name}" type="$2`!p snip.rv = complete(t[2], 'buttontypes')`" icon="${3:gtk-execute}"
		string="${4:Asignar Perito a todas las lÃ­neas}" 
		/>$0
endsnippet

snippet editable "editable"
editable="$1`!p snip.rv = complete(t[1], 'editable')`"$0
endsnippet

snippet kv
'${1:key}': ${2:'value'}, $0
endsnippet

snippet dict
{'${1:field}': ${2:'value'}, $0}
endsnippet

snippet dom
[('${1:field}', '${2:=}', ${3:'value'})]
endsnippet

snippet group
<group${1: string="${3:Some title here, optional}"}>
	$0
</group>
endsnippet

snippet notebook "notebook" b
<notebook>
	<page string="${1:Page title}">
		$0
	</page>
</notebook>
endsnippet

snippet groups
groups="${1:module_name.}${2:group_xml_id}" 
endsnippet

snippet tree
<tree string="${1:Title of view}" version="${2:8.0}"${3: edit="1" create="1" delete="1"}$0>
</tree>
endsnippet

snippet colors "Tree colors" b
colors="${1:red:${2:${3:assignee_id}==${4:False}}};" $0
endsnippet

snippet actwindow
<record id="action_`!p snip.rv = points2underscores(t[1])`" model="ir.actions.act_window">
	<field name="name">${2:Name of action and menu}</field>
	<field name="type">ir.actions.act_window</field>
	<field name="res_model">${1:model.with.points}</field>
	<field name="view_type">${3:form}</field>
	<field name="view_mode">$4`!p snip.rv = complete(t[4], 'viewtypes')`</field>
	<field name="context">{}</field>
	<field name="domain">[]</field>
</record>
<menuitem action="action_`!p snip.rv = points2underscores(t[1])`" id="menu_`!p snip.rv = points2underscores(t[1])`" parent="${5:parent_xmlid}" sequence="${6:10}" />
$0
endsnippet
snippet act_window
<record id="action_`!p snip.rv = points2underscores(t[1])`" model="ir.actions.act_window">
	<field name="name">${2:Name of action and menu}</field>
	<field name="type">ir.actions.act_window</field>
	<field name="res_model">${1:model.with.points}</field>
	<field name="view_type">${3:form}</field>
	<field name="view_mode">$4`!p snip.rv = complete(t[4], 'viewtypes')`</field>
	<field name="context">{}</field>
	<field name="domain">[]</field>
</record>
<menuitem action="action_`!p snip.rv = points2underscores(t[1])`" id="menu_`!p snip.rv = points2underscores(t[1])`" parent="${5:parent_xmlid}" sequence="${6:10}" />
$0
endsnippet
snippet act_window_multi "Description" b
<record id="action_`!p snip.rv = points2underscores(t[1])`_${2:special_name}" model="ir.actions.act_window">
	<field name="name">${3:Name of action and menu}</field>
	<field name="type">ir.actions.act_window</field>
	<field name="res_model">${1:model.with.points}</field>
	<field name="view_type">${4:form}</field>
	<field name="view_mode">${5:tree,form,calendar,graph}</field>
	<field name="context">{}</field>
	<field name="domain">[]</field>
</record>
<record id="action_`!p snip.rv = points2underscores(t[1])`_$6`!p snip.rv = complete(t[6], 'viewtypes')`_$2" model="ir.actions.act_window.view">
	<field eval="1" name="sequence"/>
	<field name="view_mode">$6</field>
	<field name="view_id" ref="view_`!p snip.rv = points2underscores(t[1])`_$6_$2"/>
	<field name="act_window_id" ref="action_`!p snip.rv = points2underscores(t[1])`_$2"/>
</record>
<record id="action_`!p snip.rv = points2underscores(t[1])`_$7`!p snip.rv = complete(t[7], 'viewtypes')`_$2" model="ir.actions.act_window.view">
	<field eval="1" name="sequence"/>
	<field name="view_mode">$7</field>
	<field name="view_id" ref="view_`!p snip.rv = points2underscores(t[1])`_$7_$2"/>
	<field name="act_window_id" ref="action_`!p snip.rv = points2underscores(t[1])`_$2"/>
</record>
<menuitem id="menu_`!p snip.rv = points2underscores(t[1])`_$2" action="action_`!p snip.rv = points2underscores(t[1])`_$2" parent="${8:parent_xmlid}" sequence="${9:10}" />
$0
endsnippet

snippet actionserver "ir.actions.server" b
<record id="action_`!p snip.rv = points2underscores(t[1])`_`!p snip.rv = lower_underscore(t[2])`" model="ir.actions.server">
	<field name="name">${2:Some title}</field>
	<field name="model_id" ref="model_${1:model_with_underscores}" />
	<field name="state">code</field>
	<field name="condition"></field>
	<field name="code">
		${3:if context.get('active_model') == '`!p snip.rv = underscores2points(t[1])`' and context.get('active_ids'):
			self.your_function(cr, uid, context.get('active_ids', []), context)}
	</field>
</record>
endsnippet

snippet actionmulti "client_action_multi" b
<record id="action_`!p snip.rv = points2underscores(t[1])`_`!p snip.rv = lower_underscore(t[2])`" model="ir.actions.server">
	<field name="name">$2</field>
	<field name="model_id" ref="model_`!p snip.rv = points2underscores(t[1])`" />
	<field name="state">code</field>
	<field name="condition">True</field>
	<field name="code">
		${3:if context.get('active_model') == '`!p snip.rv = underscores2points(t[1])`' and context.get('active_ids'):
			self.send_pictures_to_web(cr, uid, context.get('active_ids', []), context)}
	</field>
</record>

<record id="action_module_`!p snip.rv = points2underscores(t[1])`_`!p snip.rv = lower_underscore(t[2])`" model="ir.values">
	<field name="model_id" ref="model_`!p snip.rv = points2underscores(t[1])`" />
	<field name="name">${2:Some title}</field>
	<field name="key2">client_action_multi</field>
	<field name="value" eval="'ir.actions.server,%d'%action_`!p snip.rv = points2underscores(t[1])`_`!p snip.rv = lower_underscore(t[2])`" />
	<field name="key">action</field>
	<field name="model">${1:model.with.points}</field>
</record>
endsnippet

snippet chatter "oe_chatter" b
<div class="oe_chatter">
	<field name="message_follower_ids" widget="mail_followers" groups="base.group_user" />
	<field name="message_ids" widget="mail_thread" />
</div>
endsnippet

snippet domain "domain attr" 
domain="[('${1:some_field}', '$2`!p snip.rv = complete(t[2], 'operators')`', ${3:some_value})]" $0
endsnippet

snippet footer "footer" b
<footer>
	<button string="OK" name="${1:python_function_or_workflow_trigger_or_%(action_xml_id)d_name}" type="$2`!p snip.rv = complete(t[2], 'buttontypes')`" class="oe_highlight"/>
	or
	<button string="Cancelar" class="oe_link" special="cancel" />
</footer>
endsnippet

snippet bcscenario
<record id="scenario_inventory_$1" model="scanner.scennario">
	<field name="name">${2:Name HERE}</field>
	<field name="active" eval="1" />
	<field name="sequence" eval="400" />
	<field name="model_id" ref="${3:module_name.}${4:model_name}" />
	<field name="type">scenario</field>
	<field name="shared_custom" eval="0" />
</record>

$0
endsnippet

snippet bcstep
<record id="scenario_inventory_$1" model="scanner.scenario.step">
	<field name="name">${2:Name HERE}</field>
	<field name="scenario_id" ref="scenario_inventory$3" />
	<field name="step_start" eval="${4:0}" />
	<field name="step_stop" eval="${5:0}" />
	<field name="step_back" eval="${6:0}" />
	<field name="python_code">act = '${7:M}'
res = [
	${8:('|', name), 
    ('start', startresumename), 
    ('review', 'Review'), 
    ('open', 'Open'), 
    ('save', 'Save'), 
    ('exit', 'Cancel'),}
]
val = '${9:soma_return_val_here}'
	</field>
</record>

$0
endsnippet

snippet bctrans
<record id="scenario_inventory_$1_$2" model="scanner.scenario.transition">
	<field name="name">${3:Name here}</field>
	<field name="from_id" ref="scenario_inventory_$1" />
	<field name="to_id" ref="scenario_inventory_$2" />
	<field name="condition">True</field>
	<field name="transition_type">${4:keyboard}</field>
	<field name="tracer">${5:$1}</field>
	<field name="scenario_id" ref="scenario_inventory$6" />
	<field name="sequence" eval="${7:10}" />
</record>

$0
endsnippet
